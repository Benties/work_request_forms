{"ast":null,"code":"var _jsxFileName = \"/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Paper, Typography, TextField, Button, Box, CircularProgress, Alert, Chip, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { CloudUpload as CloudUploadIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(null);\n  const [answerText, setAnswerText] = useState('');\n  const [file, setFile] = useState(null);\n  const [attachments, setAttachments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId || !id) {\n        setError('Missing required parameters: requestId, formId, or questionId');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Fetch question\n        const questionResponse = await api.getQuestion(id);\n        setQuestion(questionResponse.data[0]);\n\n        // Fetch existing answer\n        const answerResponse = await api.getAnswer(id, requestId);\n        if (answerResponse.data && answerResponse.data.length > 0) {\n          setAnswer(answerResponse.data[0]);\n          setAnswerText(String(answerResponse.data[0][FIELDS.ANSWERS.ANSWER].value));\n\n          // Fetch attachments for the answer\n          const attachmentsResponse = await api.getAttachmentsForAnswer(Number(answerResponse.data[0][FIELDS.ANSWERS.RECORD_ID].value));\n          setAttachments(attachmentsResponse.data);\n        }\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, requestId, formId]);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n  const handleDeleteAttachment = async recordId => {\n    try {\n      await api.deleteAttachment(recordId);\n      setAttachments(attachments.filter(att => att.record_id !== recordId));\n    } catch (error) {\n      setError('Failed to delete attachment');\n      console.error('Error deleting attachment:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!userId || !requestId || !formId || !id) {\n      setError('Missing required parameters');\n      return;\n    }\n    setSaving(true);\n    setError(null);\n    try {\n      var _answerResponse$data, _answerResponse$data$, _answerResponse$data$2;\n      let answerResponse;\n      if (answer) {\n        // Update existing answer\n        answerResponse = await api.updateAnswer(String(answer[FIELDS.ANSWERS.RECORD_ID].value), answerText, userId, requestId);\n      } else {\n        // Create new answer\n        answerResponse = await api.saveAnswer(id, answerText, userId, requestId);\n      }\n\n      // Get the answer record ID from the response\n      const answerRecordId = (_answerResponse$data = answerResponse.data) === null || _answerResponse$data === void 0 ? void 0 : (_answerResponse$data$ = _answerResponse$data[0]) === null || _answerResponse$data$ === void 0 ? void 0 : (_answerResponse$data$2 = _answerResponse$data$[FIELDS.ANSWERS.RECORD_ID]) === null || _answerResponse$data$2 === void 0 ? void 0 : _answerResponse$data$2.value;\n      if (!answerRecordId) {\n        throw new Error('Failed to get answer record ID');\n      }\n\n      // Upload file if selected\n      if (file) {\n        await api.uploadFileAttachment(Number(answerRecordId), file.name, file);\n      }\n      setSuccess(true);\n      setTimeout(() => navigate(`/?userId=${userId}&requestId=${requestId}&formId=${formId}`), 2000);\n    } catch (error) {\n      setError('Failed to save answer');\n      console.error('Error saving answer:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: String(question[FIELDS.QUESTIONS.QUESTION].value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(Chip, {\n        label: \"Previously Answered\",\n        color: \"success\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        label: \"Your Answer\",\n        value: answerText,\n        onChange: e => setAnswerText(e.target.value),\n        margin: \"normal\",\n        required: question[FIELDS.QUESTIONS.REQUIRED].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          id: \"file-upload\",\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            component: \"span\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 26\n            }, this),\n            children: \"Upload Attachment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 1\n          },\n          children: [\"Selected file: \", file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), attachments.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Attachments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: attachments.map(attachment => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => handleDeleteAttachment(attachment.record_id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT].value.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)\n          }, attachment.record_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: \"Answer saved successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: saving,\n        children: saving ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this) : answer ? 'Update Answer' : 'Save Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"NrR0wjHgQgy+kXYNd2tAWpR142Y=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","Paper","Typography","TextField","Button","Box","CircularProgress","Alert","Chip","List","ListItem","ListItemText","IconButton","CloudUpload","CloudUploadIcon","Delete","DeleteIcon","api","FIELDS","jsxDEV","_jsxDEV","QuestionForm","_s","id","searchParams","userId","get","requestId","formId","navigate","question","setQuestion","answer","setAnswer","answerText","setAnswerText","file","setFile","attachments","setAttachments","loading","setLoading","saving","setSaving","error","setError","success","setSuccess","fetchData","questionResponse","getQuestion","data","answerResponse","getAnswer","length","String","ANSWERS","ANSWER","value","attachmentsResponse","getAttachmentsForAnswer","Number","RECORD_ID","console","handleFileChange","event","target","files","handleDeleteAttachment","recordId","deleteAttachment","filter","att","record_id","handleSubmit","preventDefault","_answerResponse$data","_answerResponse$data$","_answerResponse$data$2","updateAnswer","saveAnswer","answerRecordId","Error","uploadFileAttachment","name","setTimeout","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","sx","mb","elevation","p","variant","QUESTIONS","QUESTION","label","color","onSubmit","fullWidth","multiline","rows","onChange","e","margin","required","REQUIRED","mt","accept","style","type","htmlFor","component","startIcon","map","attachment","secondaryAction","edge","onClick","primary","ATTACHMENTS","FILE_ATTACHMENT","disabled","size","_c","$RefreshReg$"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  CircularProgress,\n  Alert,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton\n} from '@mui/material';\nimport { CloudUpload as CloudUploadIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\n\ninterface QuickBaseField {\n  value: string | boolean;\n}\n\ninterface Question {\n  [key: number]: QuickBaseField;\n}\n\ninterface Answer {\n  [key: number]: QuickBaseField;\n}\n\ninterface Attachment {\n  record_id: number;\n  [key: number]: {\n    value: {\n      fileName: string;\n      data: string;\n    };\n  };\n}\n\nconst QuestionForm = () => {\n  const { id } = useParams<{ id: string }>();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState<Question | null>(null);\n  const [answer, setAnswer] = useState<Answer | null>(null);\n  const [answerText, setAnswerText] = useState('');\n  const [file, setFile] = useState<File | null>(null);\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId || !id) {\n        setError('Missing required parameters: requestId, formId, or questionId');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Fetch question\n        const questionResponse = await api.getQuestion(id);\n        setQuestion(questionResponse.data[0]);\n\n        // Fetch existing answer\n        const answerResponse = await api.getAnswer(id, requestId);\n        if (answerResponse.data && answerResponse.data.length > 0) {\n          setAnswer(answerResponse.data[0]);\n          setAnswerText(String(answerResponse.data[0][FIELDS.ANSWERS.ANSWER].value));\n\n          // Fetch attachments for the answer\n          const attachmentsResponse = await api.getAttachmentsForAnswer(\n            Number(answerResponse.data[0][FIELDS.ANSWERS.RECORD_ID].value)\n          );\n          setAttachments(attachmentsResponse.data);\n        }\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [id, requestId, formId]);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const handleDeleteAttachment = async (recordId: number) => {\n    try {\n      await api.deleteAttachment(recordId);\n      setAttachments(attachments.filter(att => att.record_id !== recordId));\n    } catch (error) {\n      setError('Failed to delete attachment');\n      console.error('Error deleting attachment:', error);\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!userId || !requestId || !formId || !id) {\n      setError('Missing required parameters');\n      return;\n    }\n\n    setSaving(true);\n    setError(null);\n\n    try {\n      let answerResponse;\n\n      if (answer) {\n        // Update existing answer\n        answerResponse = await api.updateAnswer(\n          String(answer[FIELDS.ANSWERS.RECORD_ID].value),\n          answerText,\n          userId,\n          requestId\n        );\n      } else {\n        // Create new answer\n        answerResponse = await api.saveAnswer(\n          id,\n          answerText,\n          userId,\n          requestId\n        );\n      }\n\n      // Get the answer record ID from the response\n      const answerRecordId = answerResponse.data?.[0]?.[FIELDS.ANSWERS.RECORD_ID]?.value;\n      if (!answerRecordId) {\n        throw new Error('Failed to get answer record ID');\n      }\n\n      // Upload file if selected\n      if (file) {\n        await api.uploadFileAttachment(\n          Number(answerRecordId),\n          file.name,\n          file\n        );\n      }\n\n      setSuccess(true);\n      setTimeout(() => navigate(`/?userId=${userId}&requestId=${requestId}&formId=${formId}`), 2000);\n    } catch (error) {\n      setError('Failed to save answer');\n      console.error('Error saving answer:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!question) {\n    return (\n      <Alert severity=\"error\">\n        Question not found\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h5\">\n          {String(question[FIELDS.QUESTIONS.QUESTION].value)}\n        </Typography>\n        {answer && (\n          <Chip\n            label=\"Previously Answered\"\n            color=\"success\"\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          fullWidth\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          label=\"Your Answer\"\n          value={answerText}\n          onChange={(e) => setAnswerText(e.target.value)}\n          margin=\"normal\"\n          required={question[FIELDS.QUESTIONS.REQUIRED].value as boolean}\n        />\n        <Box sx={{ mt: 2, mb: 2 }}>\n          <input\n            accept=\"image/*\"\n            style={{ display: 'none' }}\n            id=\"file-upload\"\n            type=\"file\"\n            onChange={handleFileChange}\n          />\n          <label htmlFor=\"file-upload\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              startIcon={<CloudUploadIcon />}\n            >\n              Upload Attachment\n            </Button>\n          </label>\n          {file && (\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n              Selected file: {file.name}\n            </Typography>\n          )}\n        </Box>\n\n        {attachments.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\">Attachments:</Typography>\n            <List>\n              {attachments.map((attachment) => (\n                <ListItem\n                  key={attachment.record_id}\n                  secondaryAction={\n                    <IconButton edge=\"end\" onClick={() => handleDeleteAttachment(attachment.record_id)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText\n                    primary={attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT].value.fileName}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n        {success && (\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\n            Answer saved successfully!\n          </Alert>\n        )}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={saving}\n        >\n          {saving ? <CircularProgress size={24} /> : answer ? 'Update Answer' : 'Save Answer'}\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}