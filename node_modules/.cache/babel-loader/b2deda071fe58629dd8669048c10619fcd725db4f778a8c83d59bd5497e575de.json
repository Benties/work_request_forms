{"ast":null,"code":"var _jsxFileName = \"/home/ben/lighthouse/work_requsts/frontend/src/components/Progress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Paper, Typography, List, ListItem, ListItemText, ListItemButton, Box, CircularProgress, LinearProgress } from '@mui/material';\nimport { api } from '../config/quickbase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = () => {\n  _s();\n  const [progress, setProgress] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const response = await api.getProgress('current-user-id'); // Replace with actual user ID from QuickBase context\n        setProgress(response.data);\n      } catch (error) {\n        console.error('Error fetching progress:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProgress();\n  }, []);\n  const completedCount = progress.filter(p => p.status === 'completed').length;\n  const totalCount = progress.length;\n  const progressPercentage = totalCount > 0 ? completedCount / totalCount * 100 : 0;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Your Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: [\"Completed: \", completedCount, \" / \", totalCount, \" questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progressPercentage,\n        sx: {\n          height: 10,\n          borderRadius: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: progress.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: () => navigate(`/question/${item.question_id}`),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Question ${item.question_id}`,\n            secondary: `Status: ${item.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, item.question_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Progress, \"s+I+UXxzGQ6iDhcOY7SsNsev3IY=\", false, function () {\n  return [useNavigate];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Paper","Typography","List","ListItem","ListItemText","ListItemButton","Box","CircularProgress","LinearProgress","api","jsxDEV","_jsxDEV","Progress","_s","progress","setProgress","loading","setLoading","navigate","fetchProgress","response","getProgress","data","error","console","completedCount","filter","p","status","length","totalCount","progressPercentage","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","variant","gutterBottom","mb","value","height","borderRadius","map","item","disablePadding","onClick","question_id","primary","secondary","_c","$RefreshReg$"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/Progress.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Box,\n  CircularProgress,\n  LinearProgress\n} from '@mui/material';\nimport { api } from '../config/quickbase.ts';\n\ninterface Progress {\n  question_id: string;\n  status: string;\n}\n\nconst Progress = () => {\n  const [progress, setProgress] = useState<Progress[]>([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const response = await api.getProgress('current-user-id'); // Replace with actual user ID from QuickBase context\n        setProgress(response.data);\n      } catch (error) {\n        console.error('Error fetching progress:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProgress();\n  }, []);\n\n  const completedCount = progress.filter(p => p.status === 'completed').length;\n  const totalCount = progress.length;\n  const progressPercentage = totalCount > 0 ? (completedCount / totalCount) * 100 : 0;\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Your Progress\n      </Typography>\n      <Box sx={{ mb: 3 }}>\n        <Typography variant=\"body1\" gutterBottom>\n          Completed: {completedCount} / {totalCount} questions\n        </Typography>\n        <LinearProgress\n          variant=\"determinate\"\n          value={progressPercentage}\n          sx={{ height: 10, borderRadius: 5 }}\n        />\n      </Box>\n      <List>\n        {progress.map((item) => (\n          <ListItem key={item.question_id} disablePadding>\n            <ListItemButton onClick={() => navigate(`/question/${item.question_id}`)}>\n              <ListItemText\n                primary={`Question ${item.question_id}`}\n                secondary={`Status: ${item.status}`}\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default Progress;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}