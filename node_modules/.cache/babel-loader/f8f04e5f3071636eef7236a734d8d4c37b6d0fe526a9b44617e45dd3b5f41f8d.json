{"ast":null,"code":"var _jsxFileName = \"/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Paper, Typography, TextField, Button, Box, CircularProgress, Alert, Chip, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, ImageList, ImageListItem, ImageListItemBar } from '@mui/material';\nimport { CloudUpload as CloudUploadIcon, Delete as DeleteIcon, Edit as EditIcon, Image as ImageIcon, PictureAsPdf as PdfIcon, Description as DocumentIcon } from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = () => {\n  _s();\n  var _selectedAttachment$F, _selectedAttachment$F2, _selectedAttachment$F3, _selectedAttachment$F4, _selectedAttachment$F5, _selectedAttachment$F6, _selectedAttachment$F7, _selectedAttachment$F8, _selectedAttachment$F9, _selectedAttachment$F10, _selectedAttachment$F11;\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(null);\n  const [answerText, setAnswerText] = useState('');\n  const [file, setFile] = useState(null);\n  const [attachments, setAttachments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedAttachment, setSelectedAttachment] = useState(null);\n  const [editingAttachment, setEditingAttachment] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId || !id) {\n        setError('Missing required parameters: requestId, formId, or questionId');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Fetch question\n        const questionResponse = await api.getQuestion(id);\n        setQuestion(questionResponse.data[0]);\n\n        // Fetch existing answer\n        const answerResponse = await api.getAnswer(id, requestId);\n        if (answerResponse.data && answerResponse.data.length > 0) {\n          setAnswer(answerResponse.data[0]);\n          setAnswerText(String(answerResponse.data[0][FIELDS.ANSWERS.ANSWER].value));\n\n          // Fetch attachments for the answer\n          const attachmentsResponse = await api.getAttachmentsForAnswer(Number(answerResponse.data[0][FIELDS.ANSWERS.RECORD_ID].value));\n          setAttachments(attachmentsResponse.data);\n        }\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, requestId, formId]);\n  const handlePreviewOpen = attachment => {\n    setSelectedAttachment(attachment);\n    setPreviewOpen(true);\n  };\n  const handlePreviewClose = () => {\n    setPreviewOpen(false);\n    setSelectedAttachment(null);\n  };\n  const handleEditAttachment = attachment => {\n    setEditingAttachment(attachment);\n  };\n  const handleEditFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n  const handleUpdateAttachment = async () => {\n    if (!editingAttachment || !file) return;\n    try {\n      await api.uploadFileAttachment(editingAttachment.record_id, file.name, file, editingAttachment.record_id);\n\n      // Refresh attachments\n      const updatedAttachments = await api.getAttachmentsForAnswer(Number(answer === null || answer === void 0 ? void 0 : answer[FIELDS.ANSWERS.RECORD_ID].value));\n      setAttachments(updatedAttachments.data);\n      setFile(null);\n      setEditingAttachment(null);\n    } catch (error) {\n      setError('Failed to update attachment');\n      console.error('Error updating attachment:', error);\n    }\n  };\n  const getFileIcon = fileName => {\n    var _fileName$split$pop;\n    if (!fileName) return /*#__PURE__*/_jsxDEV(DocumentIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 27\n    }, this);\n    const extension = (_fileName$split$pop = fileName.split('.').pop()) === null || _fileName$split$pop === void 0 ? void 0 : _fileName$split$pop.toLowerCase();\n    switch (extension) {\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n        return /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }, this);\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(PdfIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(DocumentIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const handleDeleteAttachment = async recordId => {\n    try {\n      await api.deleteAttachment(recordId);\n      setAttachments(attachments.filter(att => att.record_id !== recordId));\n    } catch (error) {\n      setError('Failed to delete attachment');\n      console.error('Error deleting attachment:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!userId || !requestId || !formId || !id) {\n      setError('Missing required parameters');\n      return;\n    }\n    setSaving(true);\n    setError(null);\n    try {\n      let answerResponse;\n      let answerRecordId;\n      if (answer) {\n        // Update existing answer\n        answerResponse = await api.updateAnswer(String(answer[FIELDS.ANSWERS.RECORD_ID].value), answerText, userId, requestId);\n        // For updates, get the record ID from metadata\n        answerRecordId = Number(answer[FIELDS.ANSWERS.RECORD_ID].value);\n      } else {\n        var _answerResponse$data, _answerResponse$data$, _answerResponse$data$2;\n        // Create new answer\n        answerResponse = await api.saveAnswer(id, answerText, userId, requestId);\n        // For new answers, get the record ID from the response data\n        answerRecordId = (_answerResponse$data = answerResponse.data) === null || _answerResponse$data === void 0 ? void 0 : (_answerResponse$data$ = _answerResponse$data[0]) === null || _answerResponse$data$ === void 0 ? void 0 : (_answerResponse$data$2 = _answerResponse$data$[FIELDS.ANSWERS.RECORD_ID]) === null || _answerResponse$data$2 === void 0 ? void 0 : _answerResponse$data$2.value;\n      }\n      if (!answerRecordId) {\n        throw new Error('Failed to get answer record ID');\n      }\n\n      // Upload file if selected\n      if (file) {\n        await api.uploadFileAttachment(answerRecordId, file.name, file);\n      }\n      setSuccess(true);\n      setTimeout(() => navigate(`/?userId=${userId}&requestId=${requestId}&formId=${formId}`), 2000);\n    } catch (error) {\n      setError('Failed to save answer');\n      console.error('Error saving answer:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: String(question[FIELDS.QUESTIONS.QUESTION].value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(Chip, {\n        label: \"Previously Answered\",\n        color: \"success\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        label: \"Your Answer\",\n        value: answerText,\n        onChange: e => setAnswerText(e.target.value),\n        margin: \"normal\",\n        required: question[FIELDS.QUESTIONS.REQUIRED].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          id: \"file-upload\",\n          type: \"file\",\n          onChange: e => {\n            if (e.target.files && e.target.files[0]) {\n              setFile(e.target.files[0]);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            component: \"span\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 26\n            }, this),\n            children: \"Upload Attachment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 1\n          },\n          children: [\"Selected file: \", file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), attachments.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Attachments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n          cols: 3,\n          rowHeight: 164,\n          children: attachments.map(attachment => {\n            var _attachment$FIELDS$AT, _attachment$FIELDS$AT2;\n            const fileName = (_attachment$FIELDS$AT = attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) === null || _attachment$FIELDS$AT === void 0 ? void 0 : (_attachment$FIELDS$AT2 = _attachment$FIELDS$AT.value) === null || _attachment$FIELDS$AT2 === void 0 ? void 0 : _attachment$FIELDS$AT2.fileName;\n            return /*#__PURE__*/_jsxDEV(ImageListItem, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  bgcolor: 'grey.100',\n                  cursor: 'pointer'\n                },\n                onClick: () => handlePreviewOpen(attachment),\n                children: [getFileIcon(fileName), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mt: 1,\n                    textAlign: 'center'\n                  },\n                  children: fileName || 'Unknown File'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n                position: \"top\",\n                actionIcon: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => handleEditAttachment(attachment),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => handleDeleteAttachment(attachment.record_id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)]\n            }, attachment.record_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: previewOpen,\n        onClose: handlePreviewClose,\n        maxWidth: \"md\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: (selectedAttachment === null || selectedAttachment === void 0 ? void 0 : (_selectedAttachment$F = selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) === null || _selectedAttachment$F === void 0 ? void 0 : (_selectedAttachment$F2 = _selectedAttachment$F.value) === null || _selectedAttachment$F2 === void 0 ? void 0 : _selectedAttachment$F2.fileName) || 'Preview'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: selectedAttachment && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: (_selectedAttachment$F3 = selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) !== null && _selectedAttachment$F3 !== void 0 && (_selectedAttachment$F4 = _selectedAttachment$F3.value) !== null && _selectedAttachment$F4 !== void 0 && (_selectedAttachment$F5 = _selectedAttachment$F4.fileName) !== null && _selectedAttachment$F5 !== void 0 && _selectedAttachment$F5.match(/\\.(jpg|jpeg|png|gif)$/i) ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${(_selectedAttachment$F6 = selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) === null || _selectedAttachment$F6 === void 0 ? void 0 : (_selectedAttachment$F7 = _selectedAttachment$F6.value) === null || _selectedAttachment$F7 === void 0 ? void 0 : _selectedAttachment$F7.data}`,\n              alt: ((_selectedAttachment$F8 = selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) === null || _selectedAttachment$F8 === void 0 ? void 0 : (_selectedAttachment$F9 = _selectedAttachment$F8.value) === null || _selectedAttachment$F9 === void 0 ? void 0 : _selectedAttachment$F9.fileName) || 'Image',\n              style: {\n                maxWidth: '100%',\n                maxHeight: '70vh'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Preview not available for this file type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this), \"File name: \", ((_selectedAttachment$F10 = selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) === null || _selectedAttachment$F10 === void 0 ? void 0 : (_selectedAttachment$F11 = _selectedAttachment$F10.value) === null || _selectedAttachment$F11 === void 0 ? void 0 : _selectedAttachment$F11.fileName) || 'Unknown File']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePreviewClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: !!editingAttachment,\n        onClose: () => setEditingAttachment(null),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit Attachment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"*/*\",\n              style: {\n                display: 'none'\n              },\n              id: \"edit-file-upload\",\n              type: \"file\",\n              onChange: handleEditFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"edit-file-upload\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                component: \"span\",\n                startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 30\n                }, this),\n                children: \"Select New File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: [\"Selected file: \", file.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditingAttachment(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateAttachment,\n            variant: \"contained\",\n            disabled: !file,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: \"Answer saved successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: saving,\n        children: saving ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this) : answer ? 'Update Answer' : 'Save Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"o0S5oS91LKudCOJFaaJOlIBro3E=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","Paper","Typography","TextField","Button","Box","CircularProgress","Alert","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","ImageList","ImageListItem","ImageListItemBar","CloudUpload","CloudUploadIcon","Delete","DeleteIcon","Edit","EditIcon","Image","ImageIcon","PictureAsPdf","PdfIcon","Description","DocumentIcon","api","FIELDS","jsxDEV","_jsxDEV","QuestionForm","_s","_selectedAttachment$F","_selectedAttachment$F2","_selectedAttachment$F3","_selectedAttachment$F4","_selectedAttachment$F5","_selectedAttachment$F6","_selectedAttachment$F7","_selectedAttachment$F8","_selectedAttachment$F9","_selectedAttachment$F10","_selectedAttachment$F11","id","searchParams","userId","get","requestId","formId","navigate","question","setQuestion","answer","setAnswer","answerText","setAnswerText","file","setFile","attachments","setAttachments","loading","setLoading","saving","setSaving","error","setError","success","setSuccess","previewOpen","setPreviewOpen","selectedAttachment","setSelectedAttachment","editingAttachment","setEditingAttachment","fetchData","questionResponse","getQuestion","data","answerResponse","getAnswer","length","String","ANSWERS","ANSWER","value","attachmentsResponse","getAttachmentsForAnswer","Number","RECORD_ID","console","handlePreviewOpen","attachment","handlePreviewClose","handleEditAttachment","handleEditFileChange","event","target","files","handleUpdateAttachment","uploadFileAttachment","record_id","name","updatedAttachments","getFileIcon","fileName","_fileName$split$pop","_jsxFileName","lineNumber","columnNumber","extension","split","pop","toLowerCase","handleDeleteAttachment","recordId","deleteAttachment","filter","att","handleSubmit","preventDefault","answerRecordId","updateAnswer","_answerResponse$data","_answerResponse$data$","_answerResponse$data$2","saveAnswer","Error","setTimeout","display","justifyContent","alignItems","minHeight","children","severity","sx","mb","elevation","p","variant","QUESTIONS","QUESTION","label","color","onSubmit","fullWidth","multiline","rows","onChange","e","margin","required","REQUIRED","mt","accept","style","type","htmlFor","component","startIcon","cols","rowHeight","map","_attachment$FIELDS$AT","_attachment$FIELDS$AT2","ATTACHMENTS","FILE_ATTACHMENT","width","height","flexDirection","bgcolor","cursor","onClick","textAlign","position","actionIcon","size","open","onClose","maxWidth","match","src","alt","maxHeight","disabled","_c","$RefreshReg$"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  CircularProgress,\n  Alert,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  ImageList,\n  ImageListItem,\n  ImageListItemBar\n} from '@mui/material';\nimport {\n  CloudUpload as CloudUploadIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Image as ImageIcon,\n  PictureAsPdf as PdfIcon,\n  Description as DocumentIcon\n} from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\n\ninterface QuickBaseField {\n  value: string | boolean;\n}\n\ninterface Question {\n  [key: number]: QuickBaseField;\n}\n\ninterface Answer {\n  [key: number]: QuickBaseField;\n}\n\ninterface Attachment {\n  record_id: number;\n  [key: number]: {\n    value: {\n      fileName: string;\n      data: string;\n    };\n  };\n}\n\nconst QuestionForm = () => {\n  const { id } = useParams<{ id: string }>();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState<Question | null>(null);\n  const [answer, setAnswer] = useState<Answer | null>(null);\n  const [answerText, setAnswerText] = useState('');\n  const [file, setFile] = useState<File | null>(null);\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedAttachment, setSelectedAttachment] = useState<Attachment | null>(null);\n  const [editingAttachment, setEditingAttachment] = useState<Attachment | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId || !id) {\n        setError('Missing required parameters: requestId, formId, or questionId');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Fetch question\n        const questionResponse = await api.getQuestion(id);\n        setQuestion(questionResponse.data[0]);\n\n        // Fetch existing answer\n        const answerResponse = await api.getAnswer(id, requestId);\n        if (answerResponse.data && answerResponse.data.length > 0) {\n          setAnswer(answerResponse.data[0]);\n          setAnswerText(String(answerResponse.data[0][FIELDS.ANSWERS.ANSWER].value));\n\n          // Fetch attachments for the answer\n          const attachmentsResponse = await api.getAttachmentsForAnswer(\n            Number(answerResponse.data[0][FIELDS.ANSWERS.RECORD_ID].value)\n          );\n          setAttachments(attachmentsResponse.data);\n        }\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [id, requestId, formId]);\n\n  const handlePreviewOpen = (attachment: Attachment) => {\n    setSelectedAttachment(attachment);\n    setPreviewOpen(true);\n  };\n\n  const handlePreviewClose = () => {\n    setPreviewOpen(false);\n    setSelectedAttachment(null);\n  };\n\n  const handleEditAttachment = (attachment: Attachment) => {\n    setEditingAttachment(attachment);\n  };\n\n  const handleEditFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const handleUpdateAttachment = async () => {\n    if (!editingAttachment || !file) return;\n\n    try {\n      await api.uploadFileAttachment(\n        editingAttachment.record_id,\n        file.name,\n        file,\n        editingAttachment.record_id\n      );\n\n      // Refresh attachments\n      const updatedAttachments = await api.getAttachmentsForAnswer(\n        Number(answer?.[FIELDS.ANSWERS.RECORD_ID].value)\n      );\n      setAttachments(updatedAttachments.data);\n      setFile(null);\n      setEditingAttachment(null);\n    } catch (error) {\n      setError('Failed to update attachment');\n      console.error('Error updating attachment:', error);\n    }\n  };\n\n  const getFileIcon = (fileName: string | undefined) => {\n    if (!fileName) return <DocumentIcon />;\n\n    const extension = fileName.split('.').pop()?.toLowerCase();\n    switch (extension) {\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n        return <ImageIcon />;\n      case 'pdf':\n        return <PdfIcon />;\n      default:\n        return <DocumentIcon />;\n    }\n  };\n\n  const handleDeleteAttachment = async (recordId: number) => {\n    try {\n      await api.deleteAttachment(recordId);\n      setAttachments(attachments.filter(att => att.record_id !== recordId));\n    } catch (error) {\n      setError('Failed to delete attachment');\n      console.error('Error deleting attachment:', error);\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!userId || !requestId || !formId || !id) {\n      setError('Missing required parameters');\n      return;\n    }\n\n    setSaving(true);\n    setError(null);\n\n    try {\n      let answerResponse;\n      let answerRecordId: number;\n\n      if (answer) {\n        // Update existing answer\n        answerResponse = await api.updateAnswer(\n          String(answer[FIELDS.ANSWERS.RECORD_ID].value),\n          answerText,\n          userId,\n          requestId\n        );\n        // For updates, get the record ID from metadata\n        answerRecordId = Number(answer[FIELDS.ANSWERS.RECORD_ID].value);\n      } else {\n        // Create new answer\n        answerResponse = await api.saveAnswer(\n          id,\n          answerText,\n          userId,\n          requestId\n        );\n        // For new answers, get the record ID from the response data\n        answerRecordId = answerResponse.data?.[0]?.[FIELDS.ANSWERS.RECORD_ID]?.value;\n      }\n\n      if (!answerRecordId) {\n        throw new Error('Failed to get answer record ID');\n      }\n\n      // Upload file if selected\n      if (file) {\n        await api.uploadFileAttachment(\n          answerRecordId,\n          file.name,\n          file\n        );\n      }\n\n      setSuccess(true);\n      setTimeout(() => navigate(`/?userId=${userId}&requestId=${requestId}&formId=${formId}`), 2000);\n    } catch (error) {\n      setError('Failed to save answer');\n      console.error('Error saving answer:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!question) {\n    return (\n      <Alert severity=\"error\">\n        Question not found\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h5\">\n          {String(question[FIELDS.QUESTIONS.QUESTION].value)}\n        </Typography>\n        {answer && (\n          <Chip\n            label=\"Previously Answered\"\n            color=\"success\"\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          fullWidth\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          label=\"Your Answer\"\n          value={answerText}\n          onChange={(e) => setAnswerText(e.target.value)}\n          margin=\"normal\"\n          required={question[FIELDS.QUESTIONS.REQUIRED].value as boolean}\n        />\n        <Box sx={{ mt: 2, mb: 2 }}>\n          <input\n            accept=\"image/*\"\n            style={{ display: 'none' }}\n            id=\"file-upload\"\n            type=\"file\"\n            onChange={(e) => {\n              if (e.target.files && e.target.files[0]) {\n                setFile(e.target.files[0]);\n              }\n            }}\n          />\n          <label htmlFor=\"file-upload\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              startIcon={<CloudUploadIcon />}\n            >\n              Upload Attachment\n            </Button>\n          </label>\n          {file && (\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n              Selected file: {file.name}\n            </Typography>\n          )}\n        </Box>\n\n        {attachments.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\">Attachments:</Typography>\n            <ImageList cols={3} rowHeight={164}>\n              {attachments.map((attachment) => {\n                const fileName = attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value?.fileName;\n                return (\n                  <ImageListItem key={attachment.record_id}>\n                    <Box\n                      sx={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        bgcolor: 'grey.100',\n                        cursor: 'pointer'\n                      }}\n                      onClick={() => handlePreviewOpen(attachment)}\n                    >\n                      {getFileIcon(fileName)}\n                      <Typography variant=\"body2\" sx={{ mt: 1, textAlign: 'center' }}>\n                        {fileName || 'Unknown File'}\n                      </Typography>\n                    </Box>\n                    <ImageListItemBar\n                      position=\"top\"\n                      actionIcon={\n                        <Box>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleEditAttachment(attachment)}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleDeleteAttachment(attachment.record_id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Box>\n                      }\n                    />\n                  </ImageListItem>\n                );\n              })}\n            </ImageList>\n          </Box>\n        )}\n\n        {/* Preview Dialog */}\n        <Dialog\n          open={previewOpen}\n          onClose={handlePreviewClose}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle>\n            {selectedAttachment?.[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value?.fileName || 'Preview'}\n          </DialogTitle>\n          <DialogContent>\n            {selectedAttachment && (\n              <Box sx={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center' }}>\n                {selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value?.fileName?.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                  <img\n                    src={`data:image/jpeg;base64,${selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value?.data}`}\n                    alt={selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value?.fileName || 'Image'}\n                    style={{ maxWidth: '100%', maxHeight: '70vh' }}\n                  />\n                ) : (\n                  <Box sx={{ p: 2, textAlign: 'center' }}>\n                    <Typography>\n                      Preview not available for this file type.\n                      <br />\n                      File name: {selectedAttachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value?.fileName || 'Unknown File'}\n                    </Typography>\n                  </Box>\n                )}\n              </Box>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handlePreviewClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Edit Attachment Dialog */}\n        <Dialog\n          open={!!editingAttachment}\n          onClose={() => setEditingAttachment(null)}\n        >\n          <DialogTitle>Edit Attachment</DialogTitle>\n          <DialogContent>\n            <Box sx={{ mt: 2 }}>\n              <input\n                accept=\"*/*\"\n                style={{ display: 'none' }}\n                id=\"edit-file-upload\"\n                type=\"file\"\n                onChange={handleEditFileChange}\n              />\n              <label htmlFor=\"edit-file-upload\">\n                <Button\n                  variant=\"outlined\"\n                  component=\"span\"\n                  startIcon={<CloudUploadIcon />}\n                >\n                  Select New File\n                </Button>\n              </label>\n              {file && (\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                  Selected file: {file.name}\n                </Typography>\n              )}\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setEditingAttachment(null)}>Cancel</Button>\n            <Button\n              onClick={handleUpdateAttachment}\n              variant=\"contained\"\n              disabled={!file}\n            >\n              Update\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n        {success && (\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\n            Answer saved successfully!\n          </Alert>\n        )}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={saving}\n        >\n          {saving ? <CircularProgress size={24} /> : answer ? 'Update Answer' : 'Save Answer'}\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}