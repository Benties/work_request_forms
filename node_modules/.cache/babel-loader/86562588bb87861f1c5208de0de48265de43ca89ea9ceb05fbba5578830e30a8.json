{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{Paper,Typography,List,ListItem,ListItemText,ListItemButton,Box,CircularProgress,LinearProgress}from'@mui/material';import{api}from'../config/quickbase.ts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Progress=()=>{const[progress,setProgress]=useState([]);const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const fetchProgress=async()=>{try{const response=await api.getProgress('current-user-id');// Replace with actual user ID from QuickBase context\nsetProgress(response.data);}catch(error){console.error('Error fetching progress:',error);}finally{setLoading(false);}};fetchProgress();},[]);const completedCount=progress.filter(p=>p.status==='completed').length;const totalCount=progress.length;const progressPercentage=totalCount>0?completedCount/totalCount*100:0;if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"200px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Your Progress\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",gutterBottom:true,children:[\"Completed: \",completedCount,\" / \",totalCount,\" questions\"]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:progressPercentage,sx:{height:10,borderRadius:5}})]}),/*#__PURE__*/_jsx(List,{children:progress.map(item=>/*#__PURE__*/_jsx(ListItem,{disablePadding:true,children:/*#__PURE__*/_jsx(ListItemButton,{onClick:()=>navigate(`/question/${item.question_id}`),children:/*#__PURE__*/_jsx(ListItemText,{primary:`Question ${item.question_id}`,secondary:`Status: ${item.status}`})})},item.question_id))})]});};export default Progress;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Paper","Typography","List","ListItem","ListItemText","ListItemButton","Box","CircularProgress","LinearProgress","api","jsx","_jsx","jsxs","_jsxs","Progress","progress","setProgress","loading","setLoading","navigate","fetchProgress","response","getProgress","data","error","console","completedCount","filter","p","status","length","totalCount","progressPercentage","display","justifyContent","alignItems","minHeight","children","elevation","sx","variant","gutterBottom","mb","value","height","borderRadius","map","item","disablePadding","onClick","question_id","primary","secondary"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/Progress.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Box,\n  CircularProgress,\n  LinearProgress\n} from '@mui/material';\nimport { api } from '../config/quickbase.ts';\n\ninterface Progress {\n  question_id: string;\n  status: string;\n}\n\nconst Progress = () => {\n  const [progress, setProgress] = useState<Progress[]>([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      try {\n        const response = await api.getProgress('current-user-id'); // Replace with actual user ID from QuickBase context\n        setProgress(response.data);\n      } catch (error) {\n        console.error('Error fetching progress:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProgress();\n  }, []);\n\n  const completedCount = progress.filter(p => p.status === 'completed').length;\n  const totalCount = progress.length;\n  const progressPercentage = totalCount > 0 ? (completedCount / totalCount) * 100 : 0;\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Your Progress\n      </Typography>\n      <Box sx={{ mb: 3 }}>\n        <Typography variant=\"body1\" gutterBottom>\n          Completed: {completedCount} / {totalCount} questions\n        </Typography>\n        <LinearProgress\n          variant=\"determinate\"\n          value={progressPercentage}\n          sx={{ height: 10, borderRadius: 5 }}\n        />\n      </Box>\n      <List>\n        {progress.map((item) => (\n          <ListItem key={item.question_id} disablePadding>\n            <ListItemButton onClick={() => navigate(`/question/${item.question_id}`)}>\n              <ListItemText\n                primary={`Question ${item.question_id}`}\n                secondary={`Status: ${item.status}`}\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default Progress;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}