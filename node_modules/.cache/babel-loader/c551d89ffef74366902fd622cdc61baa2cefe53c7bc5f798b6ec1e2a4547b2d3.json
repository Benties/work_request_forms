{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,useSearchParams}from'react-router-dom';import{List,ListItem,Typography,Paper,CircularProgress,Box,Alert,ListItemSecondaryAction,ImageList,ImageListItem,Button}from'@mui/material';import{Edit as EditIcon,Image as ImageIcon,PictureAsPdf as PdfIcon,Description as DocumentIcon}from'@mui/icons-material';import{api,FIELDS}from'../config/quickbase.ts';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuestionList=()=>{const[searchParams]=useSearchParams();const userId=searchParams.get('userId');const requestId=searchParams.get('requestId');const formId=searchParams.get('formId');const[questions,setQuestions]=useState([]);const[answers,setAnswers]=useState({});const[attachments,setAttachments]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{const fetchData=async()=>{if(!requestId||!formId){setError('Missing required parameters: requestId or formId');setLoading(false);return;}try{// Fetch questions\nconst questionsResponse=await api.getQuestions(formId);setQuestions(questionsResponse.data);// Fetch answers for all questions\nconst answersPromises=questionsResponse.data.map(async question=>{const answerResponse=await api.getAnswer(String(question[FIELDS.QUESTIONS.RECORD_ID].value),requestId);if(answerResponse.data&&answerResponse.data.length>0){const answer=answerResponse.data[0];const answerId=String(answer[FIELDS.ANSWERS.RECORD_ID].value);// Fetch attachments for this answer\nconst attachmentsResponse=await api.getAttachmentsForAnswer(Number(answer[FIELDS.ANSWERS.RECORD_ID].value));return{questionId:String(question[FIELDS.QUESTIONS.RECORD_ID].value),answer,attachments:attachmentsResponse.data};}return null;});const results=await Promise.all(answersPromises);const newAnswers={};const newAttachments={};results.forEach(result=>{if(result){newAnswers[result.questionId]=result.answer;newAttachments[result.questionId]=result.attachments;}});setAnswers(newAnswers);setAttachments(newAttachments);}catch(error){setError('Failed to load data');console.error('Error fetching data:',error);}finally{setLoading(false);}};fetchData();},[requestId,formId]);const handleEdit=questionId=>{navigate(`/question/${questionId}?userId=${userId}&requestId=${requestId}&formId=${formId}`);};const getFileIcon=fileName=>{var _fileName$split$pop;if(!fileName)return/*#__PURE__*/_jsx(DocumentIcon,{});const extension=(_fileName$split$pop=fileName.split('.').pop())===null||_fileName$split$pop===void 0?void 0:_fileName$split$pop.toLowerCase();switch(extension){case'jpg':case'jpeg':case'png':case'gif':return/*#__PURE__*/_jsx(ImageIcon,{});case'pdf':return/*#__PURE__*/_jsx(PdfIcon,{});default:return/*#__PURE__*/_jsx(DocumentIcon,{});}};const getAttachmentFileName=attachment=>{var _attachment$FIELDS$AT,_fileAttachment$versi;const fileAttachment=(_attachment$FIELDS$AT=attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT])===null||_attachment$FIELDS$AT===void 0?void 0:_attachment$FIELDS$AT.value;if(typeof fileAttachment==='object'&&(fileAttachment===null||fileAttachment===void 0?void 0:(_fileAttachment$versi=fileAttachment.versions)===null||_fileAttachment$versi===void 0?void 0:_fileAttachment$versi.length)>0){const latestVersion=fileAttachment.versions[fileAttachment.versions.length-1];return latestVersion.fileName;}return undefined;};const getAttachmentUrl=attachment=>{var _attachment$;const urlField=(_attachment$=attachment[8])===null||_attachment$===void 0?void 0:_attachment$.value;if(typeof urlField==='string'){return urlField;}return undefined;};const handleAttachmentClick=attachment=>{const url=getAttachmentUrl(attachment);if(url){window.open(url,'_blank');}};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"200px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}if(error){return/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error});}return/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Questions\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:\"Progress\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Box,{sx:{flex:1,height:8,bgcolor:'grey.200',borderRadius:4,overflow:'hidden'},children:/*#__PURE__*/_jsx(Box,{sx:{height:'100%',bgcolor:'primary.main',width:`${Object.keys(answers).length/questions.length*100}%`,transition:'width 0.3s ease-in-out'}})}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[Object.keys(answers).length,\" of \",questions.length,\" questions answered\"]})]})]})]}),/*#__PURE__*/_jsx(List,{children:questions.map(question=>{const questionId=String(question[FIELDS.QUESTIONS.RECORD_ID].value);const answer=answers[questionId];const questionAttachments=attachments[questionId]||[];const isRequired=question[FIELDS.QUESTIONS.REQUIRED].value;return/*#__PURE__*/_jsxs(ListItem,{divider:true,sx:{flexDirection:'column',alignItems:'flex-start',py:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',display:'flex',justifyContent:'space-between',alignItems:'flex-start'},children:[/*#__PURE__*/_jsxs(Box,{sx:{flex:1,mr:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",component:\"div\",children:String(question[FIELDS.QUESTIONS.QUESTION].value)}),isRequired&&/*#__PURE__*/_jsx(Typography,{component:\"span\",color:\"error\",variant:\"caption\",children:\"*\"})]}),answer?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{component:\"div\",variant:\"body2\",color:\"text.primary\",sx:{whiteSpace:'pre-wrap',mb:1},children:String(answer[FIELDS.ANSWERS.ANSWER].value)}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[\"Answered by: \",String(answer[FIELDS.ANSWERS.USER_EMAIL].value)]})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Not answered\"})]}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",startIcon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:()=>handleEdit(questionId),children:answer?'Edit':'Answer'})})]}),questionAttachments.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",sx:{mb:1},children:\"Attachments:\"}),/*#__PURE__*/_jsx(ImageList,{cols:4,rowHeight:120,children:questionAttachments.map(attachment=>{const fileName=getAttachmentFileName(attachment);return/*#__PURE__*/_jsx(ImageListItem,{children:/*#__PURE__*/_jsx(Box,{sx:{width:'100%',height:'100%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',bgcolor:'grey.100',cursor:'pointer',position:'relative',overflow:'hidden','&:hover':{'& .overlay':{opacity:1}}},onClick:()=>handleAttachmentClick(attachment),children:fileName!==null&&fileName!==void 0&&fileName.match(/\\.(jpg|jpeg|png|gif)$/i)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:getAttachmentUrl(attachment),alt:fileName,style:{width:'100%',height:'100%',objectFit:'contain',padding:'4px'}}),/*#__PURE__*/_jsx(Box,{className:\"overlay\",sx:{position:'absolute',top:0,left:0,right:0,bottom:0,bgcolor:'rgba(0, 0, 0, 0.5)',display:'flex',alignItems:'center',justifyContent:'center',opacity:0,transition:'opacity 0.2s'},children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{color:'white',textAlign:'center',px:1},children:\"Click to view\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[getFileIcon(fileName),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{mt:0.5,textAlign:'center',px:1},children:fileName||'Unknown File'})]})})},Number(attachment[FIELDS.ATTACHMENTS.RECORD_ID].value));})})]})]},questionId);})})]});};export default QuestionList;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","List","ListItem","Typography","Paper","CircularProgress","Box","Alert","ListItemSecondaryAction","ImageList","ImageListItem","Button","Edit","EditIcon","Image","ImageIcon","PictureAsPdf","PdfIcon","Description","DocumentIcon","api","FIELDS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuestionList","searchParams","userId","get","requestId","formId","questions","setQuestions","answers","setAnswers","attachments","setAttachments","loading","setLoading","error","setError","navigate","fetchData","questionsResponse","getQuestions","data","answersPromises","map","question","answerResponse","getAnswer","String","QUESTIONS","RECORD_ID","value","length","answer","answerId","ANSWERS","attachmentsResponse","getAttachmentsForAnswer","Number","questionId","results","Promise","all","newAnswers","newAttachments","forEach","result","console","handleEdit","getFileIcon","fileName","_fileName$split$pop","extension","split","pop","toLowerCase","getAttachmentFileName","attachment","_attachment$FIELDS$AT","_fileAttachment$versi","fileAttachment","ATTACHMENTS","FILE_ATTACHMENT","versions","latestVersion","undefined","getAttachmentUrl","_attachment$","urlField","handleAttachmentClick","url","window","open","display","justifyContent","alignItems","minHeight","children","severity","sx","mb","elevation","p","variant","gutterBottom","color","gap","flex","height","bgcolor","borderRadius","overflow","width","Object","keys","transition","questionAttachments","isRequired","REQUIRED","divider","flexDirection","py","mr","component","QUESTION","whiteSpace","ANSWER","USER_EMAIL","size","startIcon","onClick","mt","cols","rowHeight","cursor","position","opacity","match","src","alt","style","objectFit","padding","className","top","left","right","bottom","textAlign","px"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Typography,\n  Paper,\n  CircularProgress,\n  Box,\n  Alert,\n  Chip,\n  Divider,\n  ListItemSecondaryAction,\n  IconButton,\n  ImageList,\n  ImageListItem,\n  ImageListItemBar,\n  Button\n} from '@mui/material';\nimport {\n  Edit as EditIcon,\n  Image as ImageIcon,\n  PictureAsPdf as PdfIcon,\n  Description as DocumentIcon\n} from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\n\ninterface QuickBaseField {\n  value: string | boolean;\n}\n\ninterface Question {\n  [key: number]: QuickBaseField;\n}\n\ninterface Answer {\n  [key: number]: QuickBaseField;\n}\n\ninterface Attachment {\n  record_id: number;\n  [key: number]: {\n    value: number | {\n      url: string;\n      versions: Array<{\n        creator: {\n          email: string;\n          id: string;\n          name: string;\n          userName: string;\n        };\n        fileName: string;\n        uploaded: string;\n        versionNumber: number;\n      }>;\n    };\n  };\n}\n\nconst QuestionList = () => {\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [answers, setAnswers] = useState<{ [key: string]: Answer }>({});\n  const [attachments, setAttachments] = useState<{ [key: string]: Attachment[] }>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId) {\n        setError('Missing required parameters: requestId or formId');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Fetch questions\n        const questionsResponse = await api.getQuestions(formId);\n        setQuestions(questionsResponse.data);\n\n        // Fetch answers for all questions\n        const answersPromises = questionsResponse.data.map(async (question) => {\n          const answerResponse = await api.getAnswer(\n            String(question[FIELDS.QUESTIONS.RECORD_ID].value),\n            requestId\n          );\n          if (answerResponse.data && answerResponse.data.length > 0) {\n            const answer = answerResponse.data[0];\n            const answerId = String(answer[FIELDS.ANSWERS.RECORD_ID].value);\n\n            // Fetch attachments for this answer\n            const attachmentsResponse = await api.getAttachmentsForAnswer(\n              Number(answer[FIELDS.ANSWERS.RECORD_ID].value)\n            );\n\n            return {\n              questionId: String(question[FIELDS.QUESTIONS.RECORD_ID].value),\n              answer,\n              attachments: attachmentsResponse.data\n            };\n          }\n          return null;\n        });\n\n        const results = await Promise.all(answersPromises);\n        const newAnswers: { [key: string]: Answer } = {};\n        const newAttachments: { [key: string]: Attachment[] } = {};\n\n        results.forEach((result) => {\n          if (result) {\n            newAnswers[result.questionId] = result.answer;\n            newAttachments[result.questionId] = result.attachments;\n          }\n        });\n\n        setAnswers(newAnswers);\n        setAttachments(newAttachments);\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [requestId, formId]);\n\n  const handleEdit = (questionId: string) => {\n    navigate(`/question/${questionId}?userId=${userId}&requestId=${requestId}&formId=${formId}`);\n  };\n\n  const getFileIcon = (fileName: string | undefined) => {\n    if (!fileName) return <DocumentIcon />;\n\n    const extension = fileName.split('.').pop()?.toLowerCase();\n    switch (extension) {\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n        return <ImageIcon />;\n      case 'pdf':\n        return <PdfIcon />;\n      default:\n        return <DocumentIcon />;\n    }\n  };\n\n  const getAttachmentFileName = (attachment: Attachment) => {\n    const fileAttachment = attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value;\n    if (typeof fileAttachment === 'object' && fileAttachment?.versions?.length > 0) {\n      const latestVersion = fileAttachment.versions[fileAttachment.versions.length - 1];\n      return latestVersion.fileName;\n    }\n    return undefined;\n  };\n\n  const getAttachmentUrl = (attachment: Attachment) => {\n    const urlField = attachment[8]?.value;\n    if (typeof urlField === 'string') {\n      return urlField;\n    }\n    return undefined;\n  };\n\n  const handleAttachmentClick = (attachment: Attachment) => {\n    const url = getAttachmentUrl(attachment);\n    if (url) {\n      window.open(url, '_blank');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Box sx={{ mb: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Questions\n        </Typography>\n        <Box>\n          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n            Progress\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Box\n              sx={{\n                flex: 1,\n                height: 8,\n                bgcolor: 'grey.200',\n                borderRadius: 4,\n                overflow: 'hidden'\n              }}\n            >\n              <Box\n                sx={{\n                  height: '100%',\n                  bgcolor: 'primary.main',\n                  width: `${(Object.keys(answers).length / questions.length) * 100}%`,\n                  transition: 'width 0.3s ease-in-out'\n                }}\n              />\n            </Box>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {Object.keys(answers).length} of {questions.length} questions answered\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <List>\n        {questions.map((question) => {\n          const questionId = String(question[FIELDS.QUESTIONS.RECORD_ID].value);\n          const answer = answers[questionId];\n          const questionAttachments = attachments[questionId] || [];\n          const isRequired = question[FIELDS.QUESTIONS.REQUIRED].value as boolean;\n\n          return (\n            <ListItem\n              key={questionId}\n              divider\n              sx={{\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                py: 2\n              }}\n            >\n              <Box sx={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                <Box sx={{ flex: 1, mr: 2 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                    <Typography variant=\"subtitle1\" component=\"div\">\n                      {String(question[FIELDS.QUESTIONS.QUESTION].value)}\n                    </Typography>\n                    {isRequired && (\n                      <Typography component=\"span\" color=\"error\" variant=\"caption\">\n                        *\n                      </Typography>\n                    )}\n                  </Box>\n                  {answer ? (\n                    <Box>\n                      <Typography\n                        component=\"div\"\n                        variant=\"body2\"\n                        color=\"text.primary\"\n                        sx={{ whiteSpace: 'pre-wrap', mb: 1 }}\n                      >\n                        {String(answer[FIELDS.ANSWERS.ANSWER].value)}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Answered by: {String(answer[FIELDS.ANSWERS.USER_EMAIL].value)}\n                      </Typography>\n                    </Box>\n                  ) : (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Not answered\n                    </Typography>\n                  )}\n                </Box>\n                <ListItemSecondaryAction>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    startIcon={<EditIcon />}\n                    onClick={() => handleEdit(questionId)}\n                  >\n                    {answer ? 'Edit' : 'Answer'}\n                  </Button>\n                </ListItemSecondaryAction>\n              </Box>\n\n              {questionAttachments.length > 0 && (\n                <Box sx={{ width: '100%', mt: 2 }}>\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                    Attachments:\n                  </Typography>\n                  <ImageList cols={4} rowHeight={120}>\n                    {questionAttachments.map((attachment) => {\n                      const fileName = getAttachmentFileName(attachment);\n                      return (\n                        <ImageListItem key={Number(attachment[FIELDS.ATTACHMENTS.RECORD_ID].value)}>\n                          <Box\n                            sx={{\n                              width: '100%',\n                              height: '100%',\n                              display: 'flex',\n                              flexDirection: 'column',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              bgcolor: 'grey.100',\n                              cursor: 'pointer',\n                              position: 'relative',\n                              overflow: 'hidden',\n                              '&:hover': {\n                                '& .overlay': {\n                                  opacity: 1,\n                                },\n                              },\n                            }}\n                            onClick={() => handleAttachmentClick(attachment)}\n                          >\n                            {fileName?.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                              <>\n                                <img\n                                  src={getAttachmentUrl(attachment)}\n                                  alt={fileName}\n                                  style={{\n                                    width: '100%',\n                                    height: '100%',\n                                    objectFit: 'contain',\n                                    padding: '4px'\n                                  }}\n                                />\n                                <Box\n                                  className=\"overlay\"\n                                  sx={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    bgcolor: 'rgba(0, 0, 0, 0.5)',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    opacity: 0,\n                                    transition: 'opacity 0.2s',\n                                  }}\n                                >\n                                  <Typography\n                                    variant=\"caption\"\n                                    sx={{\n                                      color: 'white',\n                                      textAlign: 'center',\n                                      px: 1\n                                    }}\n                                  >\n                                    Click to view\n                                  </Typography>\n                                </Box>\n                              </>\n                            ) : (\n                              <>\n                                {getFileIcon(fileName)}\n                                <Typography variant=\"caption\" sx={{ mt: 0.5, textAlign: 'center', px: 1 }}>\n                                  {fileName || 'Unknown File'}\n                                </Typography>\n                              </>\n                            )}\n                          </Box>\n                        </ImageListItem>\n                      );\n                    })}\n                  </ImageList>\n                </Box>\n              )}\n            </ListItem>\n          );\n        })}\n      </List>\n    </Paper>\n  );\n};\n\nexport default QuestionList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}