{"ast":null,"code":"var _jsxFileName = \"/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Paper, Typography, TextField, Button, Box, CircularProgress, Alert, Chip, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, ImageList, ImageListItem, ImageListItemBar } from '@mui/material';\nimport { CloudUpload as CloudUploadIcon, Delete as DeleteIcon, Edit as EditIcon, Image as ImageIcon, PictureAsPdf as PdfIcon, Description as DocumentIcon } from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionForm = () => {\n  _s();\n  var _getAttachmentFileNam;\n  const {\n    id\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState(null);\n  const [answer, setAnswer] = useState(null);\n  const [answerText, setAnswerText] = useState('');\n  const [file, setFile] = useState(null);\n  const [attachments, setAttachments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedAttachment, setSelectedAttachment] = useState(null);\n  const [editingAttachment, setEditingAttachment] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId || !id) {\n        setError('Missing required parameters: requestId, formId, or questionId');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Fetch question\n        const questionResponse = await api.getQuestion(id);\n        setQuestion(questionResponse.data[0]);\n\n        // Fetch existing answer\n        const answerResponse = await api.getAnswer(id, requestId);\n        if (answerResponse.data && answerResponse.data.length > 0) {\n          setAnswer(answerResponse.data[0]);\n          setAnswerText(String(answerResponse.data[0][FIELDS.ANSWERS.ANSWER].value));\n\n          // Fetch attachments for the answer\n          const attachmentsResponse = await api.getAttachmentsForAnswer(Number(answerResponse.data[0][FIELDS.ANSWERS.RECORD_ID].value));\n          console.log(attachmentsResponse.data);\n          setAttachments(attachmentsResponse.data);\n        }\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, requestId, formId]);\n  const handlePreviewOpen = attachment => {\n    setSelectedAttachment(attachment);\n    setPreviewOpen(true);\n  };\n  const handlePreviewClose = () => {\n    setPreviewOpen(false);\n    setSelectedAttachment(null);\n  };\n  const handleEditAttachment = attachment => {\n    setEditingAttachment(attachment);\n  };\n  const handleEditFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n  const handleUpdateAttachment = async () => {\n    if (!editingAttachment || !file || !answer) {\n      setError('Missing required data for update');\n      return;\n    }\n    try {\n      const answerId = Number(answer[FIELDS.ANSWERS.RECORD_ID].value);\n      const attachmentId = Number(editingAttachment[FIELDS.ATTACHMENTS.RECORD_ID].value);\n      console.log('Updating attachment:', {\n        answerId,\n        fileName: file.name,\n        attachmentId\n      });\n      await api.uploadFileAttachment(answerId, file.name, file, attachmentId);\n\n      // Refresh attachments\n      const updatedAttachments = await api.getAttachmentsForAnswer(answerId);\n      console.log('Updated attachments:', updatedAttachments.data);\n      setAttachments(updatedAttachments.data);\n      setFile(null);\n      setEditingAttachment(null);\n    } catch (error) {\n      setError('Failed to update attachment');\n      console.error('Error updating attachment:', error);\n    }\n  };\n  const getFileIcon = fileName => {\n    var _fileName$split$pop;\n    if (!fileName) return /*#__PURE__*/_jsxDEV(DocumentIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 27\n    }, this);\n    const extension = (_fileName$split$pop = fileName.split('.').pop()) === null || _fileName$split$pop === void 0 ? void 0 : _fileName$split$pop.toLowerCase();\n    switch (extension) {\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n        return /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this);\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(PdfIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(DocumentIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const handleDeleteAttachment = async recordId => {\n    try {\n      console.log('Deleting attachment:', recordId);\n      await api.deleteAttachment(recordId);\n      setAttachments(attachments.filter(att => att[FIELDS.ATTACHMENTS.RECORD_ID].value !== recordId));\n    } catch (error) {\n      setError('Failed to delete attachment');\n      console.error('Error deleting attachment:', error);\n    }\n  };\n  const getAttachmentFileName = attachment => {\n    var _attachment$FIELDS$AT, _fileAttachment$versi;\n    const fileAttachment = (_attachment$FIELDS$AT = attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]) === null || _attachment$FIELDS$AT === void 0 ? void 0 : _attachment$FIELDS$AT.value;\n    if (typeof fileAttachment === 'object' && (fileAttachment === null || fileAttachment === void 0 ? void 0 : (_fileAttachment$versi = fileAttachment.versions) === null || _fileAttachment$versi === void 0 ? void 0 : _fileAttachment$versi.length) > 0) {\n      // Get the last version in the array (most recent)\n      const latestVersion = fileAttachment.versions[fileAttachment.versions.length - 1];\n      return latestVersion.fileName;\n    }\n    return undefined;\n  };\n  const getAttachmentUrl = attachment => {\n    var _attachment$;\n    const urlField = (_attachment$ = attachment[8]) === null || _attachment$ === void 0 ? void 0 : _attachment$.value;\n    if (typeof urlField === 'string') {\n      return urlField;\n    }\n    return undefined;\n  };\n  const handleAttachmentClick = attachment => {\n    const url = getAttachmentUrl(attachment);\n    if (url) {\n      window.open(url, '_blank');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!userId || !requestId || !formId || !id) {\n      setError('Missing required parameters');\n      return;\n    }\n    setSaving(true);\n    setError(null);\n    try {\n      let answerResponse;\n      let answerRecordId;\n      if (answer) {\n        // Update existing answer\n        answerResponse = await api.updateAnswer(String(answer[FIELDS.ANSWERS.RECORD_ID].value), answerText, userId, requestId);\n        // For updates, get the record ID from metadata\n        answerRecordId = Number(answer[FIELDS.ANSWERS.RECORD_ID].value);\n      } else {\n        var _answerResponse$metad, _answerResponse$metad2;\n        // Create new answer\n        answerResponse = await api.saveAnswer(id, answerText, userId, requestId);\n        // For new answers, get the record ID from metadata.createdRecordIds\n        console.log('Answer response:', answerResponse);\n        if (!((_answerResponse$metad = answerResponse.metadata) !== null && _answerResponse$metad !== void 0 && (_answerResponse$metad2 = _answerResponse$metad.createdRecordIds) !== null && _answerResponse$metad2 !== void 0 && _answerResponse$metad2[0])) {\n          throw new Error('Invalid response format from saveAnswer');\n        }\n        answerRecordId = answerResponse.metadata.createdRecordIds[0];\n      }\n      if (!answerRecordId) {\n        throw new Error('Failed to get answer record ID');\n      }\n\n      // Upload file if selected\n      if (file) {\n        await api.uploadFileAttachment(answerRecordId, file.name, file);\n      }\n      setSuccess(true);\n      setTimeout(() => navigate(`/?userId=${userId}&requestId=${requestId}&formId=${formId}`), 2000);\n    } catch (error) {\n      setError('Failed to save answer');\n      console.error('Error saving answer:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: String(question[FIELDS.QUESTIONS.QUESTION].value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(Chip, {\n        label: \"Previously Answered\",\n        color: \"success\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        label: \"Your Answer\",\n        value: answerText,\n        onChange: e => setAnswerText(e.target.value),\n        margin: \"normal\",\n        required: question[FIELDS.QUESTIONS.REQUIRED].value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          id: \"file-upload\",\n          type: \"file\",\n          onChange: e => {\n            if (e.target.files && e.target.files[0]) {\n              setFile(e.target.files[0]);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            component: \"span\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 26\n            }, this),\n            children: \"Upload Attachment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 1\n          },\n          children: [\"Selected file: \", file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), attachments.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Attachments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n          cols: 3,\n          rowHeight: 164,\n          children: attachments.map(attachment => {\n            const fileName = getAttachmentFileName(attachment);\n            return /*#__PURE__*/_jsxDEV(ImageListItem, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  bgcolor: 'grey.100',\n                  cursor: 'pointer',\n                  position: 'relative',\n                  overflow: 'hidden',\n                  '&:hover': {\n                    '& .overlay': {\n                      opacity: 1\n                    }\n                  }\n                },\n                onClick: () => handleAttachmentClick(attachment),\n                children: fileName !== null && fileName !== void 0 && fileName.match(/\\.(jpg|jpeg|png|gif)$/i) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: getAttachmentUrl(attachment),\n                    alt: fileName,\n                    style: {\n                      width: '100%',\n                      height: '100%',\n                      objectFit: 'contain',\n                      padding: '8px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: \"overlay\",\n                    sx: {\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      bgcolor: 'rgba(0, 0, 0, 0.5)',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      opacity: 0,\n                      transition: 'opacity 0.2s'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'white',\n                        textAlign: 'center',\n                        px: 2\n                      },\n                      children: \"Click to view\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [getFileIcon(fileName), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1,\n                      textAlign: 'center',\n                      px: 1\n                    },\n                    children: fileName || 'Unknown File'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n                position: \"top\",\n                actionIcon: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditAttachment(attachment);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDeleteAttachment(Number(attachment[FIELDS.ATTACHMENTS.RECORD_ID].value));\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 21\n              }, this)]\n            }, Number(attachment[FIELDS.ATTACHMENTS.RECORD_ID].value), true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: previewOpen,\n        onClose: handlePreviewClose,\n        maxWidth: \"md\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: selectedAttachment && getAttachmentFileName(selectedAttachment) || 'Preview'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: selectedAttachment && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: (_getAttachmentFileNam = getAttachmentFileName(selectedAttachment)) !== null && _getAttachmentFileNam !== void 0 && _getAttachmentFileNam.match(/\\.(jpg|jpeg|png|gif)$/i) ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getAttachmentUrl(selectedAttachment),\n              alt: getAttachmentFileName(selectedAttachment) || 'Image',\n              style: {\n                maxWidth: '100%',\n                maxHeight: '70vh'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Preview not available for this file type.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this), \"File name: \", getAttachmentFileName(selectedAttachment) || 'Unknown File']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePreviewClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: !!editingAttachment,\n        onClose: () => setEditingAttachment(null),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit Attachment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"*/*\",\n              style: {\n                display: 'none'\n              },\n              id: \"edit-file-upload\",\n              type: \"file\",\n              onChange: handleEditFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"edit-file-upload\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                component: \"span\",\n                startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 30\n                }, this),\n                children: \"Select New File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: [\"Selected file: \", file.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditingAttachment(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpdateAttachment,\n            variant: \"contained\",\n            disabled: !file,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: \"Answer saved successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: saving,\n        children: saving ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 21\n        }, this) : answer ? 'Update Answer' : 'Save Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"o0S5oS91LKudCOJFaaJOlIBro3E=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useSearchParams","Paper","Typography","TextField","Button","Box","CircularProgress","Alert","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","ImageList","ImageListItem","ImageListItemBar","CloudUpload","CloudUploadIcon","Delete","DeleteIcon","Edit","EditIcon","Image","ImageIcon","PictureAsPdf","PdfIcon","Description","DocumentIcon","api","FIELDS","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionForm","_s","_getAttachmentFileNam","id","searchParams","userId","get","requestId","formId","navigate","question","setQuestion","answer","setAnswer","answerText","setAnswerText","file","setFile","attachments","setAttachments","loading","setLoading","saving","setSaving","error","setError","success","setSuccess","previewOpen","setPreviewOpen","selectedAttachment","setSelectedAttachment","editingAttachment","setEditingAttachment","fetchData","questionResponse","getQuestion","data","answerResponse","getAnswer","length","String","ANSWERS","ANSWER","value","attachmentsResponse","getAttachmentsForAnswer","Number","RECORD_ID","console","log","handlePreviewOpen","attachment","handlePreviewClose","handleEditAttachment","handleEditFileChange","event","target","files","handleUpdateAttachment","answerId","attachmentId","ATTACHMENTS","fileName","name","uploadFileAttachment","updatedAttachments","getFileIcon","_fileName$split$pop","_jsxFileName","lineNumber","columnNumber","extension","split","pop","toLowerCase","handleDeleteAttachment","recordId","deleteAttachment","filter","att","getAttachmentFileName","_attachment$FIELDS$AT","_fileAttachment$versi","fileAttachment","FILE_ATTACHMENT","versions","latestVersion","undefined","getAttachmentUrl","_attachment$","urlField","handleAttachmentClick","url","window","open","handleSubmit","preventDefault","answerRecordId","updateAnswer","_answerResponse$metad","_answerResponse$metad2","saveAnswer","metadata","createdRecordIds","Error","setTimeout","display","justifyContent","alignItems","minHeight","children","severity","sx","mb","elevation","p","variant","QUESTIONS","QUESTION","label","color","onSubmit","fullWidth","multiline","rows","onChange","e","margin","required","REQUIRED","mt","accept","style","type","htmlFor","component","startIcon","cols","rowHeight","map","width","height","flexDirection","bgcolor","cursor","position","overflow","opacity","onClick","match","src","alt","objectFit","padding","className","top","left","right","bottom","transition","textAlign","px","actionIcon","size","stopPropagation","onClose","maxWidth","maxHeight","disabled","_c","$RefreshReg$"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  CircularProgress,\n  Alert,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  ImageList,\n  ImageListItem,\n  ImageListItemBar\n} from '@mui/material';\nimport {\n  CloudUpload as CloudUploadIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Image as ImageIcon,\n  PictureAsPdf as PdfIcon,\n  Description as DocumentIcon\n} from '@mui/icons-material';\nimport { api, FIELDS } from '../config/quickbase.ts';\n\ninterface QuickBaseField {\n  value: string | boolean;\n}\n\ninterface Question {\n  [key: number]: QuickBaseField;\n}\n\ninterface Answer {\n  [key: number]: QuickBaseField;\n}\n\ninterface Attachment {\n  record_id: number;\n  [key: number]: {\n    value: number | {\n      url: string;\n      versions: Array<{\n        creator: {\n          email: string;\n          id: string;\n          name: string;\n          userName: string;\n        };\n        fileName: string;\n        uploaded: string;\n        versionNumber: number;\n      }>;\n    };\n  };\n}\n\nconst QuestionForm = () => {\n  const { id } = useParams<{ id: string }>();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const navigate = useNavigate();\n  const [question, setQuestion] = useState<Question | null>(null);\n  const [answer, setAnswer] = useState<Answer | null>(null);\n  const [answerText, setAnswerText] = useState('');\n  const [file, setFile] = useState<File | null>(null);\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedAttachment, setSelectedAttachment] = useState<Attachment | null>(null);\n  const [editingAttachment, setEditingAttachment] = useState<Attachment | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!requestId || !formId || !id) {\n        setError('Missing required parameters: requestId, formId, or questionId');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Fetch question\n        const questionResponse = await api.getQuestion(id);\n        setQuestion(questionResponse.data[0]);\n\n        // Fetch existing answer\n        const answerResponse = await api.getAnswer(id, requestId);\n        if (answerResponse.data && answerResponse.data.length > 0) {\n          setAnswer(answerResponse.data[0]);\n          setAnswerText(String(answerResponse.data[0][FIELDS.ANSWERS.ANSWER].value));\n\n          // Fetch attachments for the answer\n          const attachmentsResponse = await api.getAttachmentsForAnswer(\n            Number(answerResponse.data[0][FIELDS.ANSWERS.RECORD_ID].value)\n          );\n          console.log(attachmentsResponse.data);\n          setAttachments(attachmentsResponse.data);\n        }\n      } catch (error) {\n        setError('Failed to load data');\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [id, requestId, formId]);\n\n  const handlePreviewOpen = (attachment: Attachment) => {\n    setSelectedAttachment(attachment);\n    setPreviewOpen(true);\n  };\n\n  const handlePreviewClose = () => {\n    setPreviewOpen(false);\n    setSelectedAttachment(null);\n  };\n\n  const handleEditAttachment = (attachment: Attachment) => {\n    setEditingAttachment(attachment);\n  };\n\n  const handleEditFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const handleUpdateAttachment = async () => {\n    if (!editingAttachment || !file || !answer) {\n      setError('Missing required data for update');\n      return;\n    }\n\n    try {\n      const answerId = Number(answer[FIELDS.ANSWERS.RECORD_ID].value);\n      const attachmentId = Number(editingAttachment[FIELDS.ATTACHMENTS.RECORD_ID].value);\n\n      console.log('Updating attachment:', {\n        answerId,\n        fileName: file.name,\n        attachmentId\n      });\n\n      await api.uploadFileAttachment(\n        answerId,\n        file.name,\n        file,\n        attachmentId\n      );\n\n      // Refresh attachments\n      const updatedAttachments = await api.getAttachmentsForAnswer(answerId);\n      console.log('Updated attachments:', updatedAttachments.data);\n      setAttachments(updatedAttachments.data);\n      setFile(null);\n      setEditingAttachment(null);\n    } catch (error) {\n      setError('Failed to update attachment');\n      console.error('Error updating attachment:', error);\n    }\n  };\n\n  const getFileIcon = (fileName: string | undefined) => {\n    if (!fileName) return <DocumentIcon />;\n\n    const extension = fileName.split('.').pop()?.toLowerCase();\n    switch (extension) {\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n        return <ImageIcon />;\n      case 'pdf':\n        return <PdfIcon />;\n      default:\n        return <DocumentIcon />;\n    }\n  };\n\n  const handleDeleteAttachment = async (recordId: number) => {\n    try {\n      console.log('Deleting attachment:', recordId);\n      await api.deleteAttachment(recordId);\n      setAttachments(attachments.filter(att => att[FIELDS.ATTACHMENTS.RECORD_ID].value !== recordId));\n    } catch (error) {\n      setError('Failed to delete attachment');\n      console.error('Error deleting attachment:', error);\n    }\n  };\n\n  const getAttachmentFileName = (attachment: Attachment) => {\n    const fileAttachment = attachment[FIELDS.ATTACHMENTS.FILE_ATTACHMENT]?.value;\n    if (typeof fileAttachment === 'object' && fileAttachment?.versions?.length > 0) {\n      // Get the last version in the array (most recent)\n      const latestVersion = fileAttachment.versions[fileAttachment.versions.length - 1];\n      return latestVersion.fileName;\n    }\n    return undefined;\n  };\n\n  const getAttachmentUrl = (attachment: Attachment) => {\n    const urlField = attachment[8]?.value;\n    if (typeof urlField === 'string') {\n      return urlField;\n    }\n    return undefined;\n  };\n\n  const handleAttachmentClick = (attachment: Attachment) => {\n    const url = getAttachmentUrl(attachment);\n    if (url) {\n      window.open(url, '_blank');\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!userId || !requestId || !formId || !id) {\n      setError('Missing required parameters');\n      return;\n    }\n\n    setSaving(true);\n    setError(null);\n\n    try {\n      let answerResponse;\n      let answerRecordId: number;\n\n      if (answer) {\n        // Update existing answer\n        answerResponse = await api.updateAnswer(\n          String(answer[FIELDS.ANSWERS.RECORD_ID].value),\n          answerText,\n          userId,\n          requestId\n        );\n        // For updates, get the record ID from metadata\n        answerRecordId = Number(answer[FIELDS.ANSWERS.RECORD_ID].value);\n      } else {\n        // Create new answer\n        answerResponse = await api.saveAnswer(\n          id,\n          answerText,\n          userId,\n          requestId\n        );\n        // For new answers, get the record ID from metadata.createdRecordIds\n        console.log('Answer response:', answerResponse);\n        if (!answerResponse.metadata?.createdRecordIds?.[0]) {\n          throw new Error('Invalid response format from saveAnswer');\n        }\n        answerRecordId = answerResponse.metadata.createdRecordIds[0];\n      }\n\n      if (!answerRecordId) {\n        throw new Error('Failed to get answer record ID');\n      }\n\n      // Upload file if selected\n      if (file) {\n        await api.uploadFileAttachment(\n          answerRecordId,\n          file.name,\n          file\n        );\n      }\n\n      setSuccess(true);\n      setTimeout(() => navigate(`/?userId=${userId}&requestId=${requestId}&formId=${formId}`), 2000);\n    } catch (error) {\n      setError('Failed to save answer');\n      console.error('Error saving answer:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!question) {\n    return (\n      <Alert severity=\"error\">\n        Question not found\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 3 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h5\">\n          {String(question[FIELDS.QUESTIONS.QUESTION].value)}\n        </Typography>\n        {answer && (\n          <Chip\n            label=\"Previously Answered\"\n            color=\"success\"\n            variant=\"outlined\"\n          />\n        )}\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          fullWidth\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          label=\"Your Answer\"\n          value={answerText}\n          onChange={(e) => setAnswerText(e.target.value)}\n          margin=\"normal\"\n          required={question[FIELDS.QUESTIONS.REQUIRED].value as boolean}\n        />\n        <Box sx={{ mt: 2, mb: 2 }}>\n          <input\n            accept=\"image/*\"\n            style={{ display: 'none' }}\n            id=\"file-upload\"\n            type=\"file\"\n            onChange={(e) => {\n              if (e.target.files && e.target.files[0]) {\n                setFile(e.target.files[0]);\n              }\n            }}\n          />\n          <label htmlFor=\"file-upload\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              startIcon={<CloudUploadIcon />}\n            >\n              Upload Attachment\n            </Button>\n          </label>\n          {file && (\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\n              Selected file: {file.name}\n            </Typography>\n          )}\n        </Box>\n\n        {attachments.length > 0 && (\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\">Attachments:</Typography>\n            <ImageList cols={3} rowHeight={164}>\n              {attachments.map((attachment) => {\n                const fileName = getAttachmentFileName(attachment);\n                return (\n                  <ImageListItem key={Number(attachment[FIELDS.ATTACHMENTS.RECORD_ID].value)}>\n                    <Box\n                      sx={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        bgcolor: 'grey.100',\n                        cursor: 'pointer',\n                        position: 'relative',\n                        overflow: 'hidden',\n                        '&:hover': {\n                          '& .overlay': {\n                            opacity: 1,\n                          },\n                        },\n                      }}\n                      onClick={() => handleAttachmentClick(attachment)}\n                    >\n                      {fileName?.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                        <>\n                          <img\n                            src={getAttachmentUrl(attachment)}\n                            alt={fileName}\n                            style={{\n                              width: '100%',\n                              height: '100%',\n                              objectFit: 'contain',\n                              padding: '8px'\n                            }}\n                          />\n                          <Box\n                            className=\"overlay\"\n                            sx={{\n                              position: 'absolute',\n                              top: 0,\n                              left: 0,\n                              right: 0,\n                              bottom: 0,\n                              bgcolor: 'rgba(0, 0, 0, 0.5)',\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              opacity: 0,\n                              transition: 'opacity 0.2s',\n                            }}\n                          >\n                            <Typography\n                              variant=\"body2\"\n                              sx={{\n                                color: 'white',\n                                textAlign: 'center',\n                                px: 2\n                              }}\n                            >\n                              Click to view\n                            </Typography>\n                          </Box>\n                        </>\n                      ) : (\n                        <>\n                          {getFileIcon(fileName)}\n                          <Typography variant=\"body2\" sx={{ mt: 1, textAlign: 'center', px: 1 }}>\n                            {fileName || 'Unknown File'}\n                          </Typography>\n                        </>\n                      )}\n                    </Box>\n                    <ImageListItemBar\n                      position=\"top\"\n                      actionIcon={\n                        <Box>\n                          <IconButton\n                            size=\"small\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleEditAttachment(attachment);\n                            }}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleDeleteAttachment(Number(attachment[FIELDS.ATTACHMENTS.RECORD_ID].value));\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Box>\n                      }\n                    />\n                  </ImageListItem>\n                );\n              })}\n            </ImageList>\n          </Box>\n        )}\n\n        {/* Preview Dialog */}\n        <Dialog\n          open={previewOpen}\n          onClose={handlePreviewClose}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle>\n            {selectedAttachment && getAttachmentFileName(selectedAttachment) || 'Preview'}\n          </DialogTitle>\n          <DialogContent>\n            {selectedAttachment && (\n              <Box sx={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center' }}>\n                {getAttachmentFileName(selectedAttachment)?.match(/\\.(jpg|jpeg|png|gif)$/i) ? (\n                  <img\n                    src={getAttachmentUrl(selectedAttachment)}\n                    alt={getAttachmentFileName(selectedAttachment) || 'Image'}\n                    style={{ maxWidth: '100%', maxHeight: '70vh' }}\n                  />\n                ) : (\n                  <Box sx={{ p: 2, textAlign: 'center' }}>\n                    <Typography>\n                      Preview not available for this file type.\n                      <br />\n                      File name: {getAttachmentFileName(selectedAttachment) || 'Unknown File'}\n                    </Typography>\n                  </Box>\n                )}\n              </Box>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handlePreviewClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Edit Attachment Dialog */}\n        <Dialog\n          open={!!editingAttachment}\n          onClose={() => setEditingAttachment(null)}\n        >\n          <DialogTitle>Edit Attachment</DialogTitle>\n          <DialogContent>\n            <Box sx={{ mt: 2 }}>\n              <input\n                accept=\"*/*\"\n                style={{ display: 'none' }}\n                id=\"edit-file-upload\"\n                type=\"file\"\n                onChange={handleEditFileChange}\n              />\n              <label htmlFor=\"edit-file-upload\">\n                <Button\n                  variant=\"outlined\"\n                  component=\"span\"\n                  startIcon={<CloudUploadIcon />}\n                >\n                  Select New File\n                </Button>\n              </label>\n              {file && (\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                  Selected file: {file.name}\n                </Typography>\n              )}\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setEditingAttachment(null)}>Cancel</Button>\n            <Button\n              onClick={handleUpdateAttachment}\n              variant=\"contained\"\n              disabled={!file}\n            >\n              Update\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n        {success && (\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\n            Answer saved successfully!\n          </Alert>\n        )}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={saving}\n        >\n          {saving ? <CircularProgress size={24} /> : answer ? 'Update Answer' : 'Save Answer'}\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default QuestionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}