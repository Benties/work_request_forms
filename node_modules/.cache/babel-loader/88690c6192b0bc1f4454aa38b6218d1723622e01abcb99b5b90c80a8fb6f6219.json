{"ast":null,"code":"var _jsxFileName = \"/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { List, ListItem, ListItemText, ListItemButton, Typography, Paper, CircularProgress, Box, Alert } from '@mui/material';\nimport { api } from '../config/quickbase.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionList = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (!userId || !requestId || !formId) {\n        setError('Missing required parameters: userId, requestId, or formId');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await api.getQuestions(formId);\n        setQuestions(response.data);\n      } catch (error) {\n        setError('Failed to fetch questions');\n        console.error('Error fetching questions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [userId, requestId, formId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: () => navigate(`/question/${question[3].value}?userId=${userId}&requestId=${requestId}&formId=${formId}`),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: String(question[6].value) // Question text\n            ,\n            secondary: `Required: ${question[7].value ? 'Yes' : 'No'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, String(question[3].value), false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionList, \"K2y/rFsWaxEggyyx8k716ag7zQo=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = QuestionList;\nexport default QuestionList;\nvar _c;\n$RefreshReg$(_c, \"QuestionList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","List","ListItem","ListItemText","ListItemButton","Typography","Paper","CircularProgress","Box","Alert","api","jsxDEV","_jsxDEV","QuestionList","_s","searchParams","userId","get","requestId","formId","questions","setQuestions","loading","setLoading","error","setError","navigate","fetchQuestions","response","getQuestions","data","console","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","sx","mb","elevation","p","variant","gutterBottom","map","question","disablePadding","onClick","value","primary","String","secondary","_c","$RefreshReg$"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Typography,\n  Paper,\n  CircularProgress,\n  Box,\n  Alert\n} from '@mui/material';\nimport { api } from '../config/quickbase.ts';\n\ninterface QuickBaseField {\n  value: string | boolean;\n}\n\ninterface Question {\n  [key: number]: QuickBaseField;\n}\n\nconst QuestionList = () => {\n  const [searchParams] = useSearchParams();\n  const userId = searchParams.get('userId');\n  const requestId = searchParams.get('requestId');\n  const formId = searchParams.get('formId');\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (!userId || !requestId || !formId) {\n        setError('Missing required parameters: userId, requestId, or formId');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await api.getQuestions(formId);\n        setQuestions(response.data);\n      } catch (error) {\n        setError('Failed to fetch questions');\n        console.error('Error fetching questions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuestions();\n  }, [userId, requestId, formId]);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 2 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Questions\n      </Typography>\n      <List>\n        {questions.map((question) => (\n          <ListItem key={String(question[3].value)} disablePadding>\n            <ListItemButton\n              onClick={() => navigate(`/question/${question[3].value}?userId=${userId}&requestId=${requestId}&formId=${formId}`)}\n            >\n              <ListItemText\n                primary={String(question[6].value)} // Question text\n                secondary={`Required: ${question[7].value ? 'Yes' : 'No'}`}\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default QuestionList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}