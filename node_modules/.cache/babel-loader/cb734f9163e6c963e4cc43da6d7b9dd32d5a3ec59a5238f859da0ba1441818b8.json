{"ast":null,"code":"var _jsxFileName = \"/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { List, ListItem, ListItemText, ListItemButton, Typography, Paper, CircularProgress, Box } from '@mui/material';\nimport { api } from '../config/quickbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionList = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await api.getQuestions();\n        setQuestions(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: () => navigate(`/question/${question.question_id}`),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: question.question_text,\n            secondary: `Type: ${question.question_type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, question.question_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionList, \"FZu95odVdUG/qHriKG4NbjPbU6w=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionList;\nexport default QuestionList;\nvar _c;\n$RefreshReg$(_c, \"QuestionList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","List","ListItem","ListItemText","ListItemButton","Typography","Paper","CircularProgress","Box","api","jsxDEV","_jsxDEV","QuestionList","_s","questions","setQuestions","loading","setLoading","navigate","fetchQuestions","response","getQuestions","data","error","console","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","p","variant","gutterBottom","map","question","disablePadding","onClick","question_id","primary","question_text","secondary","question_type","_c","$RefreshReg$"],"sources":["/home/ben/lighthouse/work_requsts/frontend/src/components/QuestionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Typography,\n  Paper,\n  CircularProgress,\n  Box\n} from '@mui/material';\nimport { api } from '../config/quickbase';\n\ninterface Question {\n  question_id: string;\n  question_text: string;\n  question_type: string;\n}\n\nconst QuestionList = () => {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await api.getQuestions();\n        setQuestions(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Paper elevation={3} sx={{ p: 2 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Questions\n      </Typography>\n      <List>\n        {questions.map((question) => (\n          <ListItem key={question.question_id} disablePadding>\n            <ListItemButton onClick={() => navigate(`/question/${question.question_id}`)}>\n              <ListItemText\n                primary={question.question_text}\n                secondary={`Type: ${question.question_type}`}\n              />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default QuestionList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}